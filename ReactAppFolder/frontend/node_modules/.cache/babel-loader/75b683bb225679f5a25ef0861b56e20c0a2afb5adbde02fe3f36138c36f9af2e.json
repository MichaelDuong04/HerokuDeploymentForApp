{"ast":null,"code":"import React,{useState}from'react';import ProjectCard from'./ProjectInfoCard';import{Container,Typography}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Projects(){const[projects,setProjects]=useState([{id:1,name:\"Homework 1\",description:\"Learning basics of git and github for version control\",members:5,joined:false,hardware:[{name:\"Hw1 set1 Part 1\",available:6,checkedOut:2},{name:\"Hw1 set 2 Part 2\",available:8,checkedOut:4}]},{id:2,name:\"Homework 2\",description:\"Learning basics of python and data structures\",members:6,joined:false,hardware:[{name:\"Hw2 set1\",available:10,checkedOut:3},{name:\"Hw2 set2\",available:15,checkedOut:7}]},{id:3,name:\"Homework 3\",description:\"Creating APIs for a mobile application\",members:7,joined:false,hardware:[{name:\"Hw3 set\",available:100,checkedOut:20}]}]);const handleToggleJoin=async projectId=>{const project=projects.find(p=>p.id===projectId);if(!project)return;const endpoint=project.joined?`http://localhost:5000/leave/${projectId}`:`http://localhost:5000/join/${projectId}`;try{const response=await fetch(endpoint);const data=await response.json();alert(data.message);setProjects(projects.map(p=>{if(p.id===projectId){return{...p,joined:!p.joined,members:p.joined?p.members-1:p.members+1};}return p;}));}catch(error){console.error(\"Error toggling join state:\",error);}};// Handler to update hardware check in/out using API calls\nconst handleHardwareUpdate=async(projectId,hardwareName,quantityChange)=>{const absQty=Math.abs(quantityChange);const endpoint=quantityChange>0?`http://localhost:5000/checkout/${projectId}/${absQty}`:`http://localhost:5000/checkin/${projectId}/${absQty}`;try{const response=await fetch(endpoint);const data=await response.json();alert(data.message);setProjects(projects.map(project=>{if(project.id===projectId){const updatedHardware=project.hardware.map(hardware=>{if(hardware.name===hardwareName){const newCheckedOut=hardware.checkedOut+quantityChange;if(newCheckedOut<0||newCheckedOut>hardware.available)return hardware;return{...hardware,checkedOut:newCheckedOut};}return hardware;});return{...project,hardware:updatedHardware};}return project;}));}catch(error){console.error(\"Error updating hardware:\",error);}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\"Projects\"}),projects.map(project=>/*#__PURE__*/_jsx(ProjectCard,{project:project,onToggleJoin:handleToggleJoin,onHardwareUpdate:handleHardwareUpdate},project.id))]});}export default Projects;","map":{"version":3,"names":["React","useState","ProjectCard","Container","Typography","jsx","_jsx","jsxs","_jsxs","Projects","projects","setProjects","id","name","description","members","joined","hardware","available","checkedOut","handleToggleJoin","projectId","project","find","p","endpoint","response","fetch","data","json","alert","message","map","error","console","handleHardwareUpdate","hardwareName","quantityChange","absQty","Math","abs","updatedHardware","newCheckedOut","children","variant","onToggleJoin","onHardwareUpdate"],"sources":["C:/Users/MikeyD/Documents/GitHub/HerokuDeploymentForApp/ReactAppFolder/frontend/src/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ProjectCard from './ProjectInfoCard';\r\nimport { Container, Typography } from '@mui/material';\r\n\r\nfunction Projects() {\r\n  const [projects, setProjects] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"Homework 1\",\r\n      description: \"Learning basics of git and github for version control\",\r\n      members: 5,\r\n      joined: false,\r\n      hardware: [\r\n        { name: \"Hw1 set1 Part 1\", available: 6, checkedOut: 2 },\r\n        { name: \"Hw1 set 2 Part 2\", available: 8, checkedOut: 4 }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Homework 2\",\r\n      description: \"Learning basics of python and data structures\",\r\n      members: 6,\r\n      joined: false,\r\n      hardware: [\r\n        { name: \"Hw2 set1\", available: 10, checkedOut: 3 },\r\n        { name: \"Hw2 set2\", available: 15, checkedOut: 7 }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Homework 3\",\r\n      description: \"Creating APIs for a mobile application\",\r\n      members: 7,\r\n      joined: false,\r\n      hardware: [\r\n        { name: \"Hw3 set\", available: 100, checkedOut: 20 }\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  const handleToggleJoin = async (projectId) => {\r\n    const project = projects.find(p => p.id === projectId);\r\n    if (!project) return;\r\n    const endpoint = project.joined\r\n      ? `http://localhost:5000/leave/${projectId}`\r\n      : `http://localhost:5000/join/${projectId}`;\r\n    try {\r\n      const response = await fetch(endpoint);\r\n      const data = await response.json();\r\n      alert(data.message);\r\n      \r\n      setProjects(projects.map(p => {\r\n        if (p.id === projectId) {\r\n          return { \r\n            ...p, \r\n            joined: !p.joined,\r\n            members: p.joined ? p.members - 1 : p.members + 1\r\n          };\r\n        }\r\n        return p;\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error toggling join state:\", error);\r\n    }\r\n  };\r\n\r\n  // Handler to update hardware check in/out using API calls\r\n  const handleHardwareUpdate = async (projectId, hardwareName, quantityChange) => {\r\n    const absQty = Math.abs(quantityChange);\r\n    const endpoint = quantityChange > 0 \r\n      ? `http://localhost:5000/checkout/${projectId}/${absQty}`\r\n      : `http://localhost:5000/checkin/${projectId}/${absQty}`;\r\n    try {\r\n      const response = await fetch(endpoint);\r\n      const data = await response.json();\r\n      alert(data.message);\r\n      \r\n      setProjects(projects.map(project => {\r\n        if (project.id === projectId) {\r\n          const updatedHardware = project.hardware.map(hardware => {\r\n            if (hardware.name === hardwareName) {\r\n              const newCheckedOut = hardware.checkedOut + quantityChange;\r\n              if (newCheckedOut < 0 || newCheckedOut > hardware.available) return hardware;\r\n              return { ...hardware, checkedOut: newCheckedOut };\r\n            }\r\n            return hardware;\r\n          });\r\n          return { ...project, hardware: updatedHardware };\r\n        }\r\n        return project;\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error updating hardware:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\">\r\n        Projects\r\n      </Typography>\r\n      {projects.map(project => (\r\n        <ProjectCard \r\n          key={project.id}\r\n          project={project}\r\n          onToggleJoin={handleToggleJoin}\r\n          onHardwareUpdate={handleHardwareUpdate}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}