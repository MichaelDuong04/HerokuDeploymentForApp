{"ast":null,"code":"import React,{useState}from'react';import{Typography,Button,TextField}from'@mui/material';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function HardwareSet(_ref){let{hardware,projectJoined,onHardwareUpdate}=_ref;const[quantity,setQuantity]=useState(1);const handleCheckOut=()=>{const qty=parseInt(quantity,10)||1;if(hardware.checkedOut+qty<=hardware.available){onHardwareUpdate(hardware.name,qty);}};const handleCheckIn=()=>{const qty=parseInt(quantity,10)||1;if(hardware.checkedOut-qty>=0){onHardwareUpdate(hardware.name,-qty);}};const handleInputChange=event=>{setQuantity(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{style:{margin:'10px 0'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[hardware.name,\" - \",hardware.available,\" available, \",hardware.checkedOut,\" checked out\"]}),projectJoined&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',marginTop:'5px'},children:[/*#__PURE__*/_jsx(TextField,{type:\"number\",value:quantity,onChange:handleInputChange,inputProps:{min:1},size:\"small\",sx:{width:'80px',mr:1}}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleCheckOut,disabled:hardware.checkedOut+(parseInt(quantity,10)||1)>hardware.available,sx:{mr:1},children:\"Check Out\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleCheckIn,disabled:hardware.checkedOut-(parseInt(quantity,10)||1)<0,children:\"Check In\"})]})]});}export default HardwareSet;","map":{"version":3,"names":["React","useState","Typography","Button","TextField","jsxs","_jsxs","jsx","_jsx","HardwareSet","_ref","hardware","projectJoined","onHardwareUpdate","quantity","setQuantity","handleCheckOut","qty","parseInt","checkedOut","available","name","handleCheckIn","handleInputChange","event","target","value","style","margin","children","variant","display","alignItems","marginTop","type","onChange","inputProps","min","size","sx","width","mr","onClick","disabled"],"sources":["C:/Users/MikeyD/Documents/GitHub/HerokuDeploymentForApp/ReactAppFolder/frontend/src/HardwareSet.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography, Button, TextField } from '@mui/material';\r\n\r\nfunction HardwareSet({ hardware, projectJoined, onHardwareUpdate }) {\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const handleCheckOut = () => {\r\n    const qty = parseInt(quantity, 10) || 1;\r\n    if (hardware.checkedOut + qty <= hardware.available) {\r\n      onHardwareUpdate(hardware.name, qty);\r\n    }\r\n  };\r\n\r\n  const handleCheckIn = () => {\r\n    const qty = parseInt(quantity, 10) || 1;\r\n    if (hardware.checkedOut - qty >= 0) {\r\n      onHardwareUpdate(hardware.name, -qty);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setQuantity(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: '10px 0' }}>\r\n      <Typography variant=\"subtitle1\">\r\n        {hardware.name} - {hardware.available} available, {hardware.checkedOut} checked out\r\n      </Typography>\r\n      {projectJoined && (\r\n        <div style={{ display: 'flex', alignItems: 'center', marginTop: '5px' }}>\r\n          <TextField \r\n            type=\"number\" \r\n            value={quantity} \r\n            onChange={handleInputChange} \r\n            inputProps={{ min: 1 }} \r\n            size=\"small\"\r\n            sx={{ width: '80px', mr: 1 }}\r\n          />\r\n          <Button \r\n            variant=\"outlined\" \r\n            onClick={handleCheckOut} \r\n            disabled={hardware.checkedOut + (parseInt(quantity, 10) || 1) > hardware.available}\r\n            sx={{ mr: 1 }}\r\n          >\r\n            Check Out\r\n          </Button>\r\n          <Button \r\n            variant=\"outlined\" \r\n            onClick={handleCheckIn} \r\n            disabled={hardware.checkedOut - (parseInt(quantity, 10) || 1) < 0}\r\n          >\r\n            Check In\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HardwareSet;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,UAAU,CAAEC,MAAM,CAAEC,SAAS,KAAQ,eAAe,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAE9D,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAAgD,IAA/C,CAAEC,QAAQ,CAAEC,aAAa,CAAEC,gBAAiB,CAAC,CAAAH,IAAA,CAChE,KAAM,CAACI,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CAE3C,KAAM,CAAAe,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,GAAG,CAAGC,QAAQ,CAACJ,QAAQ,CAAE,EAAE,CAAC,EAAI,CAAC,CACvC,GAAIH,QAAQ,CAACQ,UAAU,CAAGF,GAAG,EAAIN,QAAQ,CAACS,SAAS,CAAE,CACnDP,gBAAgB,CAACF,QAAQ,CAACU,IAAI,CAAEJ,GAAG,CAAC,CACtC,CACF,CAAC,CAED,KAAM,CAAAK,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAL,GAAG,CAAGC,QAAQ,CAACJ,QAAQ,CAAE,EAAE,CAAC,EAAI,CAAC,CACvC,GAAIH,QAAQ,CAACQ,UAAU,CAAGF,GAAG,EAAI,CAAC,CAAE,CAClCJ,gBAAgB,CAACF,QAAQ,CAACU,IAAI,CAAE,CAACJ,GAAG,CAAC,CACvC,CACF,CAAC,CAED,KAAM,CAAAM,iBAAiB,CAAIC,KAAK,EAAK,CACnCT,WAAW,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACjC,CAAC,CAED,mBACEpB,KAAA,QAAKqB,KAAK,CAAE,CAAEC,MAAM,CAAE,QAAS,CAAE,CAAAC,QAAA,eAC/BvB,KAAA,CAACJ,UAAU,EAAC4B,OAAO,CAAC,WAAW,CAAAD,QAAA,EAC5BlB,QAAQ,CAACU,IAAI,CAAC,KAAG,CAACV,QAAQ,CAACS,SAAS,CAAC,cAAY,CAACT,QAAQ,CAACQ,UAAU,CAAC,cACzE,EAAY,CAAC,CACZP,aAAa,eACZN,KAAA,QAAKqB,KAAK,CAAE,CAAEI,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,QAAQ,CAAEC,SAAS,CAAE,KAAM,CAAE,CAAAJ,QAAA,eACtErB,IAAA,CAACJ,SAAS,EACR8B,IAAI,CAAC,QAAQ,CACbR,KAAK,CAAEZ,QAAS,CAChBqB,QAAQ,CAAEZ,iBAAkB,CAC5Ba,UAAU,CAAE,CAAEC,GAAG,CAAE,CAAE,CAAE,CACvBC,IAAI,CAAC,OAAO,CACZC,EAAE,CAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,EAAE,CAAE,CAAE,CAAE,CAC9B,CAAC,cACFjC,IAAA,CAACL,MAAM,EACL2B,OAAO,CAAC,UAAU,CAClBY,OAAO,CAAE1B,cAAe,CACxB2B,QAAQ,CAAEhC,QAAQ,CAACQ,UAAU,EAAID,QAAQ,CAACJ,QAAQ,CAAE,EAAE,CAAC,EAAI,CAAC,CAAC,CAAGH,QAAQ,CAACS,SAAU,CACnFmB,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAAZ,QAAA,CACf,WAED,CAAQ,CAAC,cACTrB,IAAA,CAACL,MAAM,EACL2B,OAAO,CAAC,UAAU,CAClBY,OAAO,CAAEpB,aAAc,CACvBqB,QAAQ,CAAEhC,QAAQ,CAACQ,UAAU,EAAID,QAAQ,CAACJ,QAAQ,CAAE,EAAE,CAAC,EAAI,CAAC,CAAC,CAAG,CAAE,CAAAe,QAAA,CACnE,UAED,CAAQ,CAAC,EACN,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAApB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}